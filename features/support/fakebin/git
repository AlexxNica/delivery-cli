#!/bin/bash
# A wrapper for system git that prevents commands such as `push` to be
# executed in testing. It logs commands to "~/.history" so afterwards it can be
# asserted that they ran.
#
# Shamelessly stolen from https://github.com/github/hub
command="$1"
[ "$command" = "config" ] || echo git "$@" >> "$FAKE_BINS_HISTORY_FILE"

set -e
features_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )
tmp_dir=$features_dir/tmp
mkdir -p $tmp_dir

case "$command" in
  "clone" )
      # The Delivery CLI issues commands like
      #
      #   git clone $SSH_URL $DIRECTORY
      #
      # Since it will clone and then add a `delivery` remote, we need
      # our fake `git` command to at least make the directory that
      # it would have cloned so the CLI can then set up the remote.
      # For other subcommands, such as job, we actually need to have cloned it
      # from a remote. So we do just that

      ssh_url=$2 # not used now, just documenting
      repo_directory=$3

      remote_directory=$(mktemp -d $tmp_dir/delivery-cli-feature.XXXXX)
      cd "$remote_directory" && git init --bare && cd -

      $DELIVERY_SYSTEM_GIT clone "$remote_directory" "$repo_directory"

      cd "$repo_directory"

      # we're going to need a delivery config file in that repository
      mkdir .delivery
      echo '{
    "version": "2",
    "build_cookbook": {
        "name": "build_cookbook",
        "path": ".delivery/build_cookbook"
    },
    "build_nodes": {
        "default"    : ["name:delivery-builder*"]
    }
}' > .delivery/config.json

      # we also make sure the remote has a master branch
      $DELIVERY_SYSTEM_GIT add .delivery/config.json
      $DELIVERY_SYSTEM_GIT commit -am "Root commit"
      $DELIVERY_SYSTEM_GIT push origin master

      # and finally, we're gonna need a review branch
      echo 'A README!' > README.md
      $DELIVERY_SYSTEM_GIT add README.md
      $DELIVERY_SYSTEM_GIT commit -am 'Adding a README!'
      $DELIVERY_SYSTEM_GIT push origin HEAD:_reviews/master/username/feature/branch/1

      # cleanup
      $DELIVERY_SYSTEM_GIT reset --hard origin/master
      cd ..
      ;;
  # there are some commands we don't want to run
  "push" )
      ;;
  * )
      $DELIVERY_SYSTEM_GIT "$@"
      ;;
esac
