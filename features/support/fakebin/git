#!/bin/bash
# A wrapper for system git that prevents commands such as `push` to be
# executed in testing. It logs commands to "~/.history" so afterwards it can be
# asserted that they ran.
#
# Shamelessly stolen from https://github.com/github/hub
command="$1"
[ "$command" = "config" ] || echo git "$@" >> "$FAKE_BINS_HISTORY_FILE"

set -e
features_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )
tmp_dir=$features_dir/tmp
mkdir -p $tmp_dir

case "$command" in
    "clone" )
        repo_dir=$3
        mkdir -p $repo_dir
        cd $repo_dir
        mkdir .delivery
        echo '{
    "version": "2",
    "build_cookbook": {
        "name": "build_cookbook",
        "path": ".delivery/build_cookbook"
    },
    "build_nodes": {
        "default"    : ["name:delivery-builder*"]
    }
}' > .delivery/config.json
      ;;
  # there are some commands we don't want to run
  "push" )
      ;;
  "fetch" )
      ;;
  "checkout" )
      ;;
  "branch" )
      # Let's pretend we're on the foo branch.
      echo '* foo'
      ;;
  
  * )
      ;;
esac
